{"version":3,"sources":["stores/UserStore.js","components/Login and Registration/InputField.js","components/Login and Registration/SubmitButton.js","components/Login and Registration/LoginForm.js","components/Login and Registration/RegistrationForm.js","components/NavigationBar.js","components/GameOfLifeGrid/GameMenu.js","components/GameOfLifeGrid/Game.js","components/History/HistoryList.js","components/About/Welcome.js","components/pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["extendObservable","this","loading","key","username","InputField","className","style","marginTop","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","onClick","text","LoginForm","setRedirectLogin","setState","redirect","setRedirectDashboard","redirectDashboard","renderRedirect","state","to","password","runInAction","UserStore","sessionStorage","getItem","property","val","trim","fetch","res","json","result","title","setItem","alert","textAlign","color","setInputValue","doLogin","display","marginBottom","fontSize","RegistrationForm","setRedirect","passwordConfirmation","length","error","newUser","method","mode","headers","body","JSON","stringify","doRegister","NavigationBar","redirectLogin","removeItem","AppBar","position","background","Toolbar","variant","maxHeight","Container","disableGutters","marginLeft","float","renderDashboard","backgroundColor","selectedPage","renderGameHistory","renderWelcome","loggedIn","data-testid","doLogout","marginRight","GameMenu","changeSpeed","preventDefault","speed","renderPlayPause","playState","playButton","resumeButton","pauseButton","verticalAlign","paddingBottom","slow","fast","stop","history","clear","seed","save","saveText","gameInformation","Game","componentDidMount","mounted","ConnectToHub","game","gridFull","parse","initialState","getConnectionId","hubConnection","invoke","then","data","reactConnectionId","onMouseClicked","event","click","gridCopy","i","rows","j","cols","Math","floor","random","clearInterval","intervalId","setInterval","play","gameState","runnerConnectionId","generation","catch","console","log","stopButton","Array","fill","map","grid","author","token","calculateNextGen","arr","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","start","err","on","info","nextGeneration","arrayClone","neighbors","calculateNeighbors","k","gridTemplateColumns","col","g","onMouseEnter","colorBasedOnNeighbors","undefined","mapGrid","onMouseDown","onMouseUp","HistoryList","games","currentGame","id","Welcome","redirectRegister","setRedirectRegister","refirectRegister","src","border","borderWidth","borderColor","alt","justifyContent","Dashboard","renderSelectedPage","App","exact","path","component","render","observer","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8c2a3b6c.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            key: '',\r\n            username: ''\r\n        })\r\n    }\r\n}\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className='inputPolly' style={{ marginTop: '30px' }}>\r\n        <input\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={(e) => this.props.onChange(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\" style={{ marginTop: '10px' }}>\r\n        <button\r\n          className='btn'\r\n          onClick={ () => this.props.onClick() }\r\n          >\r\n          <span className=\"btn__content\">{this.props.text}</span>\r\n          <span className=\"btn__glitch\"></span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from '../../stores/UserStore';\r\nimport { runInAction } from 'mobx';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      redirect: false,\r\n      redirectDashboard: false\r\n    }\r\n\r\n    runInAction(() => {\r\n      UserStore.key = sessionStorage.getItem('key');\r\n      UserStore.loading = false;\r\n    });\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  setRedirectLogin = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  setRedirectDashboard = () => {\r\n    this.setState({\r\n      redirectDashboard: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/register' />\r\n    }\r\n    if (this.state.redirectDashboard) {\r\n      return <Redirect to='/' />\r\n    }\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    runInAction(() => {\r\n      UserStore.loading = true;\r\n    });\r\n\r\n    let res = await fetch(`/credentials/user/verify?username=${this.state.username}&password=${this.state.password}`)\r\n    let result = await res.json();\r\n    runInAction(() => {\r\n      UserStore.loading = false;\r\n    });\r\n\r\n    if (result.title !== \"Not Found\") {\r\n\r\n      runInAction(() => {\r\n        UserStore.loading = true;\r\n      });\r\n\r\n      sessionStorage.setItem('key', result);\r\n      sessionStorage.setItem('username', this.state.username);\r\n      sessionStorage.setItem('selectedPage', 'dashboard');\r\n      runInAction(() => {\r\n        UserStore.key = result;\r\n        UserStore.username = this.state.username;\r\n      })\r\n\r\n      runInAction(() => {\r\n        UserStore.loading = false;\r\n      });\r\n      this.setState({ redirectDashboard: true });\r\n    }\r\n    else {\r\n      alert(\"Username and password combination not valid\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"loginFormPolly\">\r\n          <div className=\"loginForm\">\r\n            <div style={{ textAlign: 'center', color: '#17c5fa', marginTop: '25px' }}>\r\n              <p>\r\n                Log in\r\n              </p>\r\n            </div>\r\n            <InputField\r\n              className='username'\r\n              type='text'\r\n              placeholder='Username'\r\n              value={this.state.username ? this.state.username : ''}\r\n              onChange={(val) => this.setInputValue('username', val)}\r\n            />\r\n            <InputField\r\n              className='password'\r\n              type='password'\r\n              placeholder='Password'\r\n              value={this.state.password ? this.state.password : ''}\r\n              onChange={(val) => this.setInputValue('password', val)}\r\n            />\r\n            <div style={{ textAlign: 'center' }}>\r\n              <SubmitButton\r\n                text='LOG IN'\r\n                onClick={() => this.doLogin()}\r\n              />\r\n            </div>\r\n            {this.renderRedirect()}\r\n            <div style={{ display: 'flex', marginBottom: '30px', marginTop: '30px' }}>\r\n              <p className=\"textAnimationSmall\">\r\n                Don't have an account?\r\n              </p>\r\n              <button className='button' onClick={this.setRedirectLogin}>\r\n                Register\r\n              </button>\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', marginBottom: '10px' }}>\r\n              <p className=\"textAnimationSmall\" style={{fontSize: '1.2em'}}>\r\n                Don't want to log in?\r\n              </p>\r\n              <button className='button' onClick={this.setRedirectDashboard} style={{fontSize: '1.2em'}}>\r\n                Go back to the game\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserStore from '../../stores/UserStore';\r\nimport { runInAction } from 'mobx';\r\n\r\nclass RegistrationForm extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      passwordConfirmation: '',\r\n      redirectDashboard: false\r\n    }\r\n\r\n    runInAction(() => {\r\n      UserStore.key = sessionStorage.getItem('key');\r\n      UserStore.loading = false;\r\n    });\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 15) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    })\r\n  }\r\n\r\n  setRedirectDashboard = () => {\r\n    this.setState({\r\n      redirectDashboard: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='/login' />\r\n    }\r\n    if (this.state.redirectDashboard) {\r\n      return <Redirect to='/' />\r\n    }\r\n  }\r\n\r\n  async doRegister() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    if (!this.state.passwordConfirmation) {\r\n      return;\r\n    }\r\n\r\n    runInAction(() => {\r\n      UserStore.loading = true;\r\n    });\r\n\r\n    let error = '';\r\n    error = this.state.password !== this.state.passwordConfirmation ? 'Passwords do not match' : '';\r\n    let res = await fetch(`/credentials/user/verifyusername?username=${this.state.username}`)\r\n    let result = await res.json();\r\n\r\n    runInAction(() => {\r\n      UserStore.loading = false;\r\n    });\r\n\r\n    error = result.title !== \"Not Found\" ? 'Username already exists' : error;\r\n    if (error === '') {\r\n      runInAction(() => {\r\n        UserStore.loading = true;\r\n      });\r\n\r\n      var newUser = {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      };\r\n      fetch('/credentials/user', {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newUser)\r\n      })\r\n\r\n      alert(\"New user created\");\r\n      this.setRedirect();\r\n\r\n      runInAction(() => {\r\n        UserStore.loading = false;\r\n      });\r\n    }\r\n    else {\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className='registrationFormPolly'>\r\n          <div className=\"loginForm\">\r\n            {this.renderRedirect()}\r\n            <div style={{ textAlign: 'center', color: '#17c5fa', marginTop: '25px' }}>\r\n              <p>\r\n                Register\r\n          </p>\r\n            </div>\r\n            <InputField\r\n              className='username'\r\n              type='text'\r\n              placeholder='Username'\r\n              value={this.state.username ? this.state.username : ''}\r\n              onChange={(val) => this.setInputValue('username', val)}\r\n            />\r\n            <InputField\r\n              className='password'\r\n              type='password'\r\n              placeholder='Password'\r\n              value={this.state.password ? this.state.password : ''}\r\n              onChange={(val) => this.setInputValue('password', val)}\r\n            />\r\n            <InputField\r\n              className='repeatPassword'\r\n              type='password'\r\n              placeholder='Repeat Password'\r\n              value={this.state.passwordConfirmation ? this.state.passwordConfirmation : ''}\r\n              onChange={(val) => this.setInputValue('passwordConfirmation', val)}\r\n            />\r\n            <div style={{ textAlign: 'center' }}>\r\n              <SubmitButton\r\n                text='REGISTER'\r\n                onClick={() => this.doRegister()}\r\n              />\r\n            </div>\r\n            <div style={{ display: 'flex', marginBottom: '30px', marginTop: '30px' }}>\r\n              <p className=\"textAnimationBig\">\r\n                Already have an account?\r\n              </p>\r\n              <button className='button' onClick={this.setRedirect} >\r\n                Log in\r\n              </button>\r\n            </div>\r\n            <div style={{ display: 'flex', marginBottom: '10px' }}>\r\n              <p className=\"textAnimationSmall\" style={{ fontSize: '1.2em' }}>\r\n                Don't want to log in?\r\n              </p>\r\n              <button className='button' onClick={this.setRedirectDashboard} style={{ fontSize: '1.2em' }}>\r\n                Go back to the game\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationForm;","import React from 'react';\r\nimport UserStore from '../stores/UserStore';\r\nimport { runInAction } from 'mobx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass NavigationBar extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            redirectLogin: false\r\n        }\r\n        runInAction(() => {\r\n            UserStore.key = sessionStorage.getItem('key');\r\n        });\r\n    }\r\n\r\n    doLogout() {\r\n        sessionStorage.removeItem('key');\r\n        sessionStorage.removeItem('username');\r\n\r\n        runInAction(() => {\r\n            UserStore.key = '';\r\n            UserStore.username = '';\r\n        })\r\n    }\r\n\r\n    doLogin = () => {\r\n        this.setState({\r\n            redirectLogin: true\r\n        })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirectLogin) {\r\n            return <Redirect to='/login' />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppBar className='navbar' position=\"fixed\" style={{ background: '#063A4C' }}>\r\n                <Toolbar variant=\"dense\" style={{ maxHeight: '2rem' }}>\r\n                <Container disableGutters>\r\n                    <p style={{ color: '#9BE8FF', marginLeft: '6em' }} >\r\n                        Welcome {UserStore.username}\r\n                    </p>\r\n                    </Container>\r\n                    <Container disableGutters>\r\n                        <div style={{ float: 'right' }}>\r\n                            {this.renderRedirect()}\r\n                            <button className='btnNav' onClick={this.props.renderDashboard} style={{ backgroundColor: this.props.selectedPage === 'dashboard' ? '#009ECE' : null }}>\r\n                                Dashboard\r\n                            <span className=\"btnNav__glitch\"></span>\r\n                            </button>\r\n                            <button className='btnNav' onClick={this.props.renderGameHistory} style={{ backgroundColor: this.props.selectedPage === 'history' ? '#009ECE' : null }} >\r\n                                Game History\r\n                            <span className=\"btnNav__glitch\"></span>\r\n                            </button>\r\n                            <button className='btnNav' onClick={this.props.renderWelcome} style={{ backgroundColor: this.props.selectedPage === 'about' ? '#009ECE' : null }} >\r\n                                About\r\n                            <span className=\"btnNav__glitch\"></span>\r\n                            </button>\r\n                            {this.props.loggedIn ? (\r\n                                <button className='btnNav' data-testid={'logOut'} onClick={this.doLogout} style={{ marginLeft: '1.5em', marginRight: '6em' }}>\r\n                                    Log out\r\n                                    <span className=\"btnNav__glitch\"></span>\r\n                                </button>\r\n                            ) : (\r\n                                    <button className='btnNav' data-testid={'logIn'} onClick={this.doLogin} style={{ marginLeft: '1.5em', marginRight: '6em' }}>\r\n                                        Log in\r\n                                        <span className=\"btnNav__glitch\"></span>\r\n                                    </button>\r\n                                )}\r\n                        </div>\r\n                    </Container>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport SpaIcon from '@material-ui/icons/Spa';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\n\r\nclass GameMenu extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tspeed: false\r\n\t\t}\r\n\t}\r\n\r\n\tchangeSpeed = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ speed: !this.state.speed });\r\n\t}\r\n\r\n\trenderPlayPause = () => {\r\n\t\tswitch (this.props.playState) {\r\n\t\t\tcase 'play':\r\n\t\t\t\treturn <button className='btnIcon'  data-testid='play' onClick={this.props.playButton} >\r\n\t\t\t\t\t<PlayArrowIcon />\r\n\t\t\t\t</button>;\r\n\t\t\tcase 'resume':\r\n\t\t\t\treturn <button className='btnIcon' data-testid='resume' onClick={this.props.resumeButton} >\r\n\t\t\t\t\t<PlayArrowIcon />\r\n\t\t\t\t</button>\r\n\t\t\tcase 'pause':\r\n\t\t\t\treturn <button className='btnIcon' data-testid='pause' onClick={this.props.pauseButton}>\r\n\t\t\t\t\t<PauseIcon />\r\n\t\t\t\t</button>\r\n\t\t\tdefault :\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{display: 'flex', verticalAlign: 'middle', paddingBottom: '10px'}}>\r\n\t\t\t\t\t{this.renderPlayPause()}\r\n\t\t\t\t\t<button className='btnIcon' data-testid='speed' onClick={this.changeSpeed}>\r\n\t\t\t\t\t\t<SpeedIcon />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{this.state.speed ? (\r\n\t\t\t\t\t\t<button className='btnIcon' data-testid='slow' onClick={this.props.slow} style={{ backgroundColor: '#063a4c41' }} >\r\n\t\t\t\t\t\t\t<AcUnitIcon />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.state.speed ? (\r\n\t\t\t\t\t\t<button className='btnIcon' data-testid='fast' onClick={this.props.fast} style={{ backgroundColor: '#063a4c41' }} >\r\n\t\t\t\t\t\t\t<WhatshotIcon />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<button className='btnIcon' data-testid='back' onClick={this.props.stop}>\r\n\t\t\t\t\t\t<RestoreIcon />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{this.props.history ?\r\n\t\t\t\t\t\tnull : (\r\n\t\t\t\t\t\t\t<button className='btnIcon' data-testid='reset' onClick={this.props.clear}>\r\n\t\t\t\t\t\t\t\t<ClearIcon />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.history ?\r\n\t\t\t\t\t\tnull : (\r\n\t\t\t\t\t\t\t<button className='btnIcon' data-testid='seed' onClick={this.props.seed}>\r\n\t\t\t\t\t\t\t\t<SpaIcon />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{this.props.history ?\r\n\t\t\t\t\t\tnull : (\r\n\t\t\t\t\t\t\t<button className='btnIcon' data-testid='save' onClick={this.props.save}>\r\n\t\t\t\t\t\t\t\t<SaveIcon style={{color: this.props.loggedIn ? '#17C5FA' : '#036C8D'}}/>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t{this.props.saveText !== '' ? <div><p className='textAnimationSave' style={{paddingBottom: '10px', color: !this.props.loggedIn ? 'red' : null}}>&nbsp;&nbsp;{this.props.saveText}</p></div> : null}\r\n\r\n\t\t\t\t{this.props.gameInformation !== '' ? <div><p className='textAnimationSave' style={{paddingBottom: '10px'}}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{this.props.gameInformation}</p></div> : null}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default GameMenu;","import React from 'react';\r\nimport GameMenu from './GameMenu';\r\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport UserStore from '../../stores/UserStore';\r\n\r\nclass Game extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.speed = 1200;\r\n\t\tthis.cols = 80;\r\n\t\tthis.rows = 40;\r\n\t\tthis.state = {\r\n\t\t\tgridFull: sessionStorage.getItem('initialState') !== null ? JSON.parse(sessionStorage.getItem('initialState')) : Array(this.rows).fill().map(() => Array(this.cols).fill(false)),\r\n\t\t\tclick: false,\r\n\t\t\tplayState: 'play',\r\n\t\t\treactConnectionId: '',\r\n\t\t\trunnerConnectionId: '',\r\n\t\t\tsaveText: '',\r\n\t\t\tgameInformation: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tlet mounted = true;\r\n\r\n\t\tif (mounted) {\r\n\t\t\tthis.ConnectToHub();\r\n\r\n\t\t\tif (this.props.game) {\r\n\t\t\t\tthis.setState({gridFull: JSON.parse(this.props.game.initialState)});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn () => mounted = false;\r\n\t}\r\n\r\n\tarrayClone(arr) {\r\n\t\treturn JSON.parse(JSON.stringify(arr));\r\n\t}\r\n\r\n\tConnectToHub() {\r\n\t\tconst hubConnection = new HubConnectionBuilder()\r\n\t\t\t.withUrl('https://activegamesapi.azurewebsites.net/Progress')\r\n\t\t\t.configureLogging(LogLevel.Information)\r\n\t\t\t.build();\r\n\r\n\t\tthis.setState({ hubConnection }, () => {\r\n\t\t\tthis.state.hubConnection\r\n\t\t\t\t.start()\r\n\t\t\t\t.then(() => console.log('Connection started!'))\r\n\t\t\t\t.then(() => this.getConnectionId(hubConnection))\r\n\t\t\t\t.catch(err => console.log('Error while establishing connection :('));\r\n\r\n\t\t\tthis.state.hubConnection.on('GameInfoSent', (info) => {\r\n\t\t\t\tif (this.intervalId) {\r\n\t\t\t\t\tthis.setState({\tgameInformation: info});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tgetConnectionId = (hubConnection) => {\r\n\t\thubConnection.invoke('getconnectionid').then(\r\n\t\t\t(data) => {\r\n\t\t\t\tthis.setState({ reactConnectionId: data });\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tonMouseClicked = (event) => {\r\n\t\tif (event.type === \"mousedown\") {\r\n\t\t\tthis.setState({ click: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({ click: false });\r\n\t\t}\r\n\t}\r\n\r\n\tseed = () => {\r\n\t\tlet gridCopy = JSON.parse(JSON.stringify((this.state.gridFull)));\r\n\t\tfor (let i = 0; i < this.rows; i++) {\r\n\t\t\tfor (let j = 0; j < this.cols; j++) {\r\n\t\t\t\tif (Math.floor(Math.random() * 4) === 1) {\r\n\t\t\t\t\tgridCopy[i][j] = !gridCopy[i][j];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({gridFull: gridCopy});\r\n\t\tthis.setState({saveText: '' });\r\n\t}\r\n\r\n\tplayButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.intervalId = setInterval(this.play, this.speed);\r\n\t\tlet gameState = {\r\n\t\t\trunnerConnectionId: this.state.runnerConnectionId,\r\n\t\t\treactConnectionId: this.state.reactConnectionId,\r\n\t\t\tgeneration: this.state.gridFull\r\n\t\t};\r\n\t\tfetch('/games/activegames', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(gameState)\r\n\t\t}).catch(console.log)\r\n\t\tthis.setState({ playState: \"pause\" });\r\n\t\tif (!this.props.game) {\r\n\t\t\tsessionStorage.setItem('initialState', JSON.stringify(this.state.gridFull));\r\n\t\t}\r\n\r\n\t\tthis.setState({saveText: '' });\r\n\t}\r\n\r\n\tresumeButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.intervalId = setInterval(this.play, this.speed);\r\n\t\tthis.setState({ playState: \"pause\" });\r\n\t\tthis.setState({saveText: '' });\r\n\t}\r\n\r\n\tpauseButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.setState({ playState: \"resume\" });\r\n\t\tthis.setState({saveText: '' });\r\n\t}\r\n\r\n\tstopButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tif (this.props.game) {\r\n\t\t\tthis.setState({gridFull: JSON.parse(this.props.game.initialState)});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({gridFull: sessionStorage.getItem('initialState') !== null ? JSON.parse(sessionStorage.getItem('initialState')) : Array(this.rows).fill().map(() => Array(this.cols).fill(false))});\r\n\t\t}\r\n\t\tthis.setState({ playState: \"play\" });\r\n\t\tthis.setState({saveText: '' });\r\n\t}\r\n\r\n\tslow = () => { this.speed = 1200; this.resumeButton(); }\r\n\r\n\tfast = () => { this.speed = 700; this.resumeButton(); }\r\n\r\n\tclear = () => {\r\n\t\tvar grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\r\n\t\tthis.setState({gridFull: grid});\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.setState({ playState: \"play\" });\r\n\t\tthis.setState({saveText: '' });\r\n\t}\r\n\r\n\tsave = () => {\r\n\t\tif (this.props.loggedIn) {\r\n\t\t\tlet game = {\r\n\t\t\t\tauthor: UserStore.username,\r\n\t\t\t\tinitialState: sessionStorage.getItem('initialState'),\r\n\t\t\t\ttoken: sessionStorage.getItem('key')\r\n\t\t\t};\r\n\t\t\tfetch('/history/gamehistory', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(game)\r\n\t\t\t}).catch(console.log)\r\n\r\n\t\t\tthis.setState({saveText: 'Your game has been saved.' });\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.setState({saveText: 'Log in to save games. ' });\r\n\t\t}\r\n\t}\r\n\r\n\tplay = () => {\r\n\t\tthis.calculateNextGen();\r\n\t}\r\n\r\n\tcalculateNextGen() {\r\n\t\tlet nextGeneration = this.arrayClone(this.state.gridFull);\r\n\t\tfor(let i = 0; i < this.rows; i++){\r\n\t\t\tfor(let j = 0; j < this.cols; j++){\r\n\t\t\t\tlet neighbors = this.calculateNeighbors(i, j);\r\n\t\t\t\tnextGeneration[i][j] = neighbors === 3 || nextGeneration[i][j];\r\n\t\t\t\tnextGeneration[i][j] = neighbors >= 2 && neighbors <= 3 && nextGeneration[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({ gridFull: nextGeneration });\r\n\t}\r\n\r\n\tcalculateNeighbors(i, k) {\r\n\t\tlet neighbors = 0;\r\n\t\tlet grid = this.state.gridFull;\r\n\r\n\t\tif (i > 0) {\r\n\t\t\tneighbors += grid[i - 1][k];\r\n\t\t\tneighbors += k > 0 ? grid[i - 1][k - 1] : 0;\r\n\t\t\tneighbors += k < this.cols - 1 ? grid[i - 1][k + 1] : 0;\r\n\t\t}\r\n\r\n\t\tif (i < this.rows - 1) {\r\n\t\t\tneighbors += grid[i + 1][k];\r\n\t\t\tneighbors += k > 0 ? grid[i + 1][k - 1] : 0;\r\n\t\t\tneighbors += k < this.cols - 1 ? grid[i + 1][k + 1] : 0;\r\n\t\t}\r\n\r\n\t\tneighbors += k > 0 ? grid[i][k - 1] : 0;\r\n\t\tneighbors += k < this.cols - 1 ? grid[i][k + 1] : 0;\r\n\r\n\t\treturn neighbors;\r\n\t}\r\n\r\n\tcolorBasedOnNeighbors(i, k) {\r\n\t\tlet neighbors = this.calculateNeighbors(i, k);\r\n\t\t\r\n\t\tif (neighbors < 2) {\r\n\t\t\treturn '#009ECE';\r\n\t\t}\r\n\t\tif (neighbors < 4) {\r\n\t\t\treturn '#17C5FA';\r\n\t\t}\r\n\t\treturn '#9BE8FF';\r\n\r\n\t}\r\n\r\n\tmapGrid() {\r\n\t\treturn (\r\n\t\t\t<div style={{ display: \"grid\", gridTemplateColumns: `repeat(${this.cols}, 16px)` }}>\r\n\t\t\t\t{this.state.gridFull.map((rows, i) =>\r\n\t\t\t\t\trows.map((col, k) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='cell'\r\n\t\t\t\t\t\t\tdata-testid={`${i}-${k}`}\r\n\t\t\t\t\t\t\tkey={`${i}-${k}`}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tif (!this.props.history) {\r\n\t\t\t\t\t\t\t\t\tlet g = this.state.gridFull;\r\n\t\t\t\t\t\t\t\t\tg[i][k] = !g[i][k];\r\n\t\t\t\t\t\t\t\t\tthis.setState({gridFull: g})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\tif (this.state.click === true) {\r\n\t\t\t\t\t\t\t\t\tlet g = this.state.gridFull;\r\n\t\t\t\t\t\t\t\t\tg[i][k] = !g[i][k];\r\n\t\t\t\t\t\t\t\t\tthis.setState({gridFull: g})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: this.state.gridFull[i][k] ? this.colorBasedOnNeighbors(i, k) : undefined\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ marginTop: '30px' }}>\r\n\t\t\t\t{this.props.history ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{this.props.game ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>{this.props.game.author}'s Game</p>\r\n\t\t\t\t\t\t\t\t<GameMenu\r\n\t\t\t\t\t\t\t\t\tplayState={this.state.playState}\r\n\t\t\t\t\t\t\t\t\tplayButton={this.playButton}\r\n\t\t\t\t\t\t\t\t\tpauseButton={this.pauseButton}\r\n\t\t\t\t\t\t\t\t\tstop={this.stopButton}\r\n\t\t\t\t\t\t\t\t\tslow={this.slow}\r\n\t\t\t\t\t\t\t\t\tfast={this.fast}\r\n\t\t\t\t\t\t\t\t\thistory={this.props.history}\r\n\t\t\t\t\t\t\t\t\tgameInformation={this.state.gameInformation}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{this.mapGrid()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div onMouseDown={this.onMouseClicked} onMouseUp={this.onMouseClicked}>\r\n\t\t\t\t\t\t\t\t<GameMenu\r\n\t\t\t\t\t\t\t\t\tplayState={this.state.playState}\r\n\t\t\t\t\t\t\t\t\tplayButton={this.playButton}\r\n\t\t\t\t\t\t\t\t\tresumeButton={this.resumeButton}\r\n\t\t\t\t\t\t\t\t\tpauseButton={this.pauseButton}\r\n\t\t\t\t\t\t\t\t\tstop={this.stopButton}\r\n\t\t\t\t\t\t\t\t\tslow={this.slow}\r\n\t\t\t\t\t\t\t\t\tfast={this.fast}\r\n\t\t\t\t\t\t\t\t\tclear={this.clear}\r\n\t\t\t\t\t\t\t\t\tseed={this.seed}\r\n\t\t\t\t\t\t\t\t\tsave={this.save}\r\n\t\t\t\t\t\t\t\t\thistory={this.props.history}\r\n\t\t\t\t\t\t\t\t\tloggedIn={this.props.loggedIn}\r\n\t\t\t\t\t\t\t\t\tsaveText={this.state.saveText}\r\n\t\t\t\t\t\t\t\t\tgameInformation={this.state.gameInformation}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{this.mapGrid()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport Game from '../GameOfLifeGrid/Game'\r\n\r\nclass HistoryList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.games.map(currentGame => (\r\n                    <Game key={currentGame.id} game={currentGame} history={true} />\r\n                ))}\r\n                <div style={{ paddingBottom: 20 }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryList;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserStore from '../../stores/UserStore';\r\nimport { runInAction } from 'mobx';\r\n\r\nclass Welcome extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            redirectLogin: false,\r\n            refirectRegister: false\r\n        }\r\n\r\n        runInAction(() => {\r\n            UserStore.loading = false;\r\n            UserStore.key = sessionStorage.getItem('key');\r\n        });\r\n    }\r\n\r\n    setRedirectLogin = () => {\r\n        this.setState({\r\n            redirectLogin: true\r\n        })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirectLogin) {\r\n            return <Redirect to='/login' />\r\n        }\r\n\r\n        if (this.state.redirectRegister) {\r\n            return <Redirect to='/register' />\r\n        }\r\n    }\r\n\r\n    setRedirectRegister = () => {\r\n        this.setState({\r\n            redirectRegister: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className='textAnimationBig' style={{ fontSize: '3rem', textAlign: 'center' }}>\r\n                    Welcome to the <span style={{ color: '#17c5fa' }}> Game <span style={{ color: '#9be8ff' }}>of</span> Life</span>.\r\n                </p>\r\n                <div style={{ display: 'flex', marginTop: '40px'}}>\r\n                    <img src={'/gameoflife.gif'} style={{ border: 'solid', borderWidth: 'thick', borderColor: '#17c5fa'}} alt=\"GameOfLife\" />\r\n                    <p  className='textAnimationBig' style={{ marginLeft: '20px'}}>\r\n                        &nbsp;&nbsp;&nbsp;The Game of Life is a cellular automaton devised by the British mathematician John Horton Conway in 1970.<br />\r\n                        It is a zero-player game, meaning that its evolution is determined by its initial state, requiring no further input. <br />\r\n                        &nbsp;&nbsp;&nbsp;One interacts with the Game of Life by creating an initial configuration and observing how it evolves. <br />\r\n                        &nbsp;&nbsp;&nbsp;The game has three rules: <br />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. Any live cell with two or three live neighbours survives. <br />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2. Any dead cell with three live neighbours becomes a live cell.<br />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3. All other live cells die in the next generation. <br />\r\n                    </p>\r\n                </div>\r\n                {this.props.loggedIn === true ? (\r\n                    <div></div>\r\n                ) : (\r\n                        <div>\r\n                            {this.renderRedirect()}\r\n                            <div style={{ display: 'flex', marginTop: '40px', justifyContent: 'center' }}>\r\n                                <p>\r\n                                    Click here to\r\n                                </p>\r\n\r\n                                <button className='button' onClick={this.setRedirectLogin} >\r\n                                    log in\r\n                                </button>\r\n                                <p>\r\n                                    or\r\n                                </p>\r\n                                <button className='button' onClick={this.setRedirectRegister}>\r\n                                    create an account\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport NavigationBar from '../NavigationBar';\r\nimport Game from '../GameOfLifeGrid/Game';\r\nimport HistoryList from '../History/HistoryList';\r\nimport Welcome from '../About/Welcome';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      selectedPage: sessionStorage.getItem('selectedPage') ? sessionStorage.getItem('selectedPage') : 'dashboard',\r\n      games: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`/history/gamehistory`)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ games: data })\r\n      })\r\n  }\r\n\r\n  renderDashboard = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ selectedPage: 'dashboard' });\r\n    sessionStorage.setItem('selectedPage', 'dashboard');\r\n  }\r\n\r\n  renderGameHistory = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ selectedPage: 'history' });\r\n    sessionStorage.setItem('selectedPage', 'history');\r\n  }\r\n\r\n  renderWelcome = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ selectedPage: 'about' });\r\n    sessionStorage.setItem('selectedPage', 'about');\r\n  }\r\n\r\n  renderSelectedPage = () => {\r\n    switch (this.state.selectedPage) {\r\n      case 'dashboard':\r\n        return <Game history={false} loggedIn={this.props.loggedIn}/>;\r\n      case 'history':\r\n        return <HistoryList games={this.state.games} />\r\n      case 'about':\r\n        return <div style={{ marginTop: '100px' }}>\r\n          <Welcome loggedIn={this.props.loggedIn} />\r\n        </div>;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavigationBar\r\n          renderDashboard={this.renderDashboard}\r\n          renderGameHistory={this.renderGameHistory}\r\n          renderWelcome={this.renderWelcome}\r\n          selectedPage={this.state.selectedPage}\r\n          loggedIn={this.props.loggedIn}\r\n        />\r\n        <div className=\"container\">\r\n          <div style={{marginTop: '2.5rem'}}>\r\n            {this.renderSelectedPage()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { observer } from 'mobx-react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport './App.css'\r\nimport UserStore from './stores/UserStore';\r\nimport LoginForm from './components/Login and Registration/LoginForm';\r\nimport RegistrationForm from './components/Login and Registration/RegistrationForm';\r\nimport Dashboard from './components/pages/Dashboard';\r\nimport { runInAction } from 'mobx';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    runInAction(() => {\r\n      UserStore.key = sessionStorage.getItem('key');\r\n      UserStore.username = sessionStorage.getItem('username');\r\n      UserStore.loading = false;\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let result = await fetch(`/credentials/user/token?username=${UserStore.username}&token=${UserStore.key}`);\r\n    result = await result.json();\r\n\r\n    if (result !== true) {\r\n      sessionStorage.removeItem('key');\r\n      sessionStorage.removeItem('username');\r\n      runInAction(() => {\r\n        UserStore.key = \"\";\r\n        UserStore.username = \"\";\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (UserStore.loading) {\r\n      return (\r\n        <div className=\"app\">\r\n          <div className='container'>\r\n            <p className='textAnimationBig' style={{ fontSize: '3rem', textAlign: 'center' }}>\r\n              Loading, please wait...\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n\r\n      if (UserStore.key) {\r\n        return (\r\n          <div className=\"app\">\r\n            <Router>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={() => (<Dashboard loggedIn={true} />)} />\r\n                <Route exact path=\"/*\" render={() => (<Redirect to=\"/\" />)} />\r\n              </Switch>\r\n            </Router>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div className=\"app\">\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={() => (<Dashboard loggedIn={false} />)} />\r\n              <Route exact path=\"/register\" component={RegistrationForm} />\r\n              <Route exact path=\"/login\" component={LoginForm} />\r\n              <Route exact path=\"/*\" render={() => (<Redirect to=\"/\" />)} />\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default observer(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}