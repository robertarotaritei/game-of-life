{"version":3,"sources":["components/NavigationBar.js","components/GameOfLifeGrid/GameMenu.js","components/GameOfLifeGrid/Game.js","components/About/Welcome.js","components/pages/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","AppBar","className","position","style","background","Toolbar","variant","maxHeight","Container","disableGutters","color","marginLeft","float","onClick","this","props","renderDashboard","backgroundColor","selectedPage","renderWelcome","marginRight","React","Component","GameMenu","changeSpeed","e","preventDefault","setState","speed","state","renderPlayPause","playState","data-testid","playButton","resumeButton","pauseButton","display","verticalAlign","paddingBottom","slow","fast","stop","clear","seed","Game","onMouseClicked","event","type","click","gridCopy","JSON","parse","stringify","gridFull","i","rows","j","cols","Math","floor","random","saveText","clearInterval","intervalId","setInterval","play","sessionStorage","setItem","stopButton","getItem","Array","fill","map","grid","calculateNextGen","arr","nextGeneration","arrayClone","neighbors","calculateNeighbors","k","gridTemplateColumns","col","key","g","onMouseEnter","colorBasedOnNeighbors","undefined","marginTop","onMouseDown","onMouseUp","mapGrid","Welcome","fontSize","textAlign","src","border","borderWidth","borderColor","alt","Dashboard","renderSelectedPage","App","observer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yTAkCeA,E,uKA1BP,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,SAASC,SAAS,QAAQC,MAAO,CAAEC,WAAY,YAC7D,kBAACC,EAAA,EAAD,CAASC,QAAQ,QAAQH,MAAO,CAAEI,UAAW,SAC7C,kBAACC,EAAA,EAAD,CAAWC,gBAAc,GACrB,uBAAGN,MAAO,CAAEO,MAAO,UAAWC,WAAY,QAA1C,iBAIA,kBAACH,EAAA,EAAD,CAAWC,gBAAc,GACrB,yBAAKN,MAAO,CAAES,MAAO,UACjB,4BAAQX,UAAU,SAASY,QAASC,KAAKC,MAAMC,gBAAiBb,MAAO,CAAEc,gBAA6C,cAA5BH,KAAKC,MAAMG,aAA+B,UAAY,OAAhJ,YAEA,0BAAMjB,UAAU,oBAEhB,4BAAQA,UAAU,SAASY,QAASC,KAAKC,MAAMI,cAAehB,MAAO,CAAEc,gBAA6C,UAA5BH,KAAKC,MAAMG,aAA2B,UAAY,KAAOE,YAAa,QAA9J,QAEA,0BAAMnB,UAAU,4B,GAnBhBoB,IAAMC,W,wICuEnBC,E,kDAjEd,aAAe,IAAD,8BACb,gBAODC,YAAc,SAACC,GACdA,EAAEC,iBACF,EAAKC,SAAS,CAAEC,OAAQ,EAAKC,MAAMD,SAVtB,EAadE,gBAAkB,WACjB,OAAQ,EAAKf,MAAMgB,WAClB,IAAK,OACJ,OAAO,4BAAQ9B,UAAU,UAAU+B,cAAY,OAAOnB,QAAS,EAAKE,MAAMkB,YACzE,kBAAC,IAAD,OAEF,IAAK,SACJ,OAAO,4BAAQhC,UAAU,UAAU+B,cAAY,SAASnB,QAAS,EAAKE,MAAMmB,cAC3E,kBAAC,IAAD,OAEF,IAAK,QACJ,OAAO,4BAAQjC,UAAU,UAAU+B,cAAY,QAAQnB,QAAS,EAAKE,MAAMoB,aAC1E,kBAAC,IAAD,OAEF,QACC,OAAO,OAzBT,EAAKN,MAAQ,CACZD,OAAO,GAJK,E,qDAiCb,OACC,yBAAKzB,MAAO,CAAEiC,QAAS,OAAQC,cAAe,SAAUC,cAAe,SACrExB,KAAKgB,kBACN,4BAAQ7B,UAAU,UAAU+B,cAAY,QAAQnB,QAASC,KAAKU,aAC7D,kBAAC,IAAD,OAEAV,KAAKe,MAAMD,MACX,4BAAQ3B,UAAU,UAAU+B,cAAY,OAAOnB,QAASC,KAAKC,MAAMwB,KAAMpC,MAAO,CAAEc,gBAAiB,cAClG,kBAAC,IAAD,OAEE,KAEHH,KAAKe,MAAMD,MACX,4BAAQ3B,UAAU,UAAU+B,cAAY,OAAOnB,QAASC,KAAKC,MAAMyB,KAAMrC,MAAO,CAAEc,gBAAiB,cAClG,kBAAC,IAAD,OAEE,KAEJ,4BAAQhB,UAAU,UAAU+B,cAAY,OAAOnB,QAASC,KAAKC,MAAM0B,MAClE,kBAAC,IAAD,OAED,4BAAQxC,UAAU,UAAU+B,cAAY,QAAQnB,QAASC,KAAKC,MAAM2B,OACnE,kBAAC,IAAD,OAED,4BAAQzC,UAAU,UAAU+B,cAAY,OAAOnB,QAASC,KAAKC,MAAM4B,MAClE,kBAAC,IAAD,Y,GA3DkBtB,IAAMC,WC6KdsB,E,kDAnLd,aAAe,IAAD,8BACb,gBAeDC,eAAiB,SAACC,GACE,cAAfA,EAAMC,KACT,EAAKpB,SAAS,CAAEqB,OAAO,IAGvB,EAAKrB,SAAS,CAAEqB,OAAO,KArBX,EAyBdL,KAAO,WAEN,IADA,IAAIM,EAAWC,KAAKC,MAAMD,KAAKE,UAAW,EAAKvB,MAAMwB,WAC5CC,EAAI,EAAGA,EAAI,EAAKC,KAAMD,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAKC,KAAMD,IACQ,IAAlCE,KAAKC,MAAsB,EAAhBD,KAAKE,YACnBX,EAASK,GAAGE,IAAMP,EAASK,GAAGE,IAIjC,EAAK7B,SAAS,CAAE0B,SAAUJ,IAC1B,EAAKtB,SAAS,CAAEkC,SAAU,MAnCb,EAsCd5B,WAAa,WACZ6B,cAAc,EAAKC,YACnB,EAAKA,WAAaC,YAAY,EAAKC,KAAM,EAAKrC,OAE9C,EAAKD,SAAS,CAAEI,UAAW,UAC3BmC,eAAeC,QAAQ,eAAgBjB,KAAKE,UAAU,EAAKvB,MAAMwB,YA3CpD,EA8CdnB,aAAe,WACd4B,cAAc,EAAKC,YACnB,EAAKA,WAAaC,YAAY,EAAKC,KAAM,EAAKrC,OAC9C,EAAKD,SAAS,CAAEI,UAAW,WAjDd,EAoDdI,YAAc,WACb2B,cAAc,EAAKC,YACnB,EAAKpC,SAAS,CAAEI,UAAW,YAtDd,EAyDdqC,WAAa,WACZN,cAAc,EAAKC,YACnB,EAAKpC,SAAS,CAAE0B,SAAqD,OAA3Ca,eAAeG,QAAQ,gBAA2BnB,KAAKC,MAAMe,eAAeG,QAAQ,iBAAmBC,MAAM,EAAKf,MAAMgB,OAAOC,KAAI,kBAAMF,MAAM,EAAKb,MAAMc,MAAK,QACzL,EAAK5C,SAAS,CAAEI,UAAW,UA5Dd,EA+DdQ,KAAO,WAAQ,EAAKX,MAAQ,KAAM,EAAKM,gBA/DzB,EAiEdM,KAAO,WAAQ,EAAKZ,MAAQ,IAAK,EAAKM,gBAjExB,EAmEdQ,MAAQ,WACP,IAAI+B,EAAOH,MAAM,EAAKf,MAAMgB,OAAOC,KAAI,kBAAMF,MAAM,EAAKb,MAAMc,MAAK,MACnE,EAAK5C,SAAS,CAAE0B,SAAUoB,IAC1BX,cAAc,EAAKC,YACnB,EAAKpC,SAAS,CAAEI,UAAW,UAvEd,EA0EdkC,KAAO,WACN,EAAKS,oBAzEL,EAAK9C,MAAQ,KACb,EAAK6B,KAAO,GACZ,EAAKF,KAAO,GACZ,EAAK1B,MAAQ,CACZwB,SAAqD,OAA3Ca,eAAeG,QAAQ,gBAA2BnB,KAAKC,MAAMe,eAAeG,QAAQ,iBAAmBC,MAAM,EAAKf,MAAMgB,OAAOC,KAAI,kBAAMF,MAAM,EAAKb,MAAMc,MAAK,MACzKvB,OAAO,EACPjB,UAAW,QARC,E,uDAYH4C,GACV,OAAOzB,KAAKC,MAAMD,KAAKE,UAAUuB,M,yCAmEjC,IADA,IAAIC,EAAiB9D,KAAK+D,WAAW/D,KAAKe,MAAMwB,UACvCC,EAAI,EAAGA,EAAIxC,KAAKyC,KAAMD,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAI1C,KAAK2C,KAAMD,IAAK,CACnC,IAAIsB,EAAYhE,KAAKiE,mBAAmBzB,EAAGE,GAC3CoB,EAAetB,GAAGE,GAAmB,IAAdsB,GAAmBF,EAAetB,GAAGE,GAC5DoB,EAAetB,GAAGE,GAAKsB,GAAa,GAAKA,GAAa,GAAKF,EAAetB,GAAGE,GAI/E1C,KAAKa,SAAS,CAAE0B,SAAUuB,M,yCAGRtB,EAAG0B,GACrB,IAAIF,EAAY,EACZL,EAAO3D,KAAKe,MAAMwB,SAiBtB,OAfIC,EAAI,IACPwB,GAAaL,EAAKnB,EAAI,GAAG0B,GACzBF,GAAaE,EAAI,EAAIP,EAAKnB,EAAI,GAAG0B,EAAI,GAAK,EAC1CF,GAAaE,EAAIlE,KAAK2C,KAAO,EAAIgB,EAAKnB,EAAI,GAAG0B,EAAI,GAAK,GAGnD1B,EAAIxC,KAAKyC,KAAO,IACnBuB,GAAaL,EAAKnB,EAAI,GAAG0B,GACzBF,GAAaE,EAAI,EAAIP,EAAKnB,EAAI,GAAG0B,EAAI,GAAK,EAC1CF,GAAaE,EAAIlE,KAAK2C,KAAO,EAAIgB,EAAKnB,EAAI,GAAG0B,EAAI,GAAK,GAGvDF,GAAaE,EAAI,EAAIP,EAAKnB,GAAG0B,EAAI,GAAK,EACtCF,GAAaE,EAAIlE,KAAK2C,KAAO,EAAIgB,EAAKnB,GAAG0B,EAAI,GAAK,I,4CAK7B1B,EAAG0B,GACxB,IAAIF,EAAYhE,KAAKiE,mBAAmBzB,EAAG0B,GAE3C,OAAIF,EAAY,EACR,UAEJA,EAAY,EACR,UAED,Y,gCAIG,IAAD,OACT,OACC,yBAAK3E,MAAO,CAAEiC,QAAS,OAAQ6C,oBAAoB,UAAD,OAAYnE,KAAK2C,KAAjB,aAChD3C,KAAKe,MAAMwB,SAASmB,KAAI,SAACjB,EAAMD,GAAP,OACxBC,EAAKiB,KAAI,SAACU,EAAKF,GAAN,OACR,yBACC/E,UAAU,OACV+B,cAAA,UAAgBsB,EAAhB,YAAqB0B,GACrBG,IAAG,UAAK7B,EAAL,YAAU0B,GACbnE,QAAS,WACR,IAAIuE,EAAI,EAAKvD,MAAMwB,SACnB+B,EAAE9B,GAAG0B,IAAMI,EAAE9B,GAAG0B,GAChB,EAAKrD,SAAS,CAAE0B,SAAU+B,KAE3BC,aAAc,WACb,IAAyB,IAArB,EAAKxD,MAAMmB,MAAgB,CAC9B,IAAIoC,EAAI,EAAKvD,MAAMwB,SACnB+B,EAAE9B,GAAG0B,IAAMI,EAAE9B,GAAG0B,GAChB,EAAKrD,SAAS,CAAE0B,SAAU+B,MAG5BjF,MAAO,CACNc,gBAAiB,EAAKY,MAAMwB,SAASC,GAAG0B,GAAK,EAAKM,sBAAsBhC,EAAG0B,QAAKO,c,+BAUtF,OACC,yBAAKpF,MAAO,CAAEqF,UAAW,SACxB,yBAAKC,YAAa3E,KAAK+B,eAAgB6C,UAAW5E,KAAK+B,gBACtD,kBAAC,EAAD,CACCd,UAAWjB,KAAKe,MAAME,UACtBE,WAAYnB,KAAKmB,WACjBC,aAAcpB,KAAKoB,aACnBC,YAAarB,KAAKqB,YAClBM,KAAM3B,KAAKsD,WACX7B,KAAMzB,KAAKyB,KACXC,KAAM1B,KAAK0B,KACXE,MAAO5B,KAAK4B,MACZC,KAAM7B,KAAK6B,OAEX7B,KAAK6E,gB,GA7KQtE,IAAMC,WCwBVsE,E,uKAtBP,OACI,6BACI,uBAAG3F,UAAU,mBAAmBE,MAAO,CAAE0F,SAAU,OAAQC,UAAW,WAAtE,kBACmB,0BAAM3F,MAAO,CAAEO,MAAO,YAAtB,SAAyC,0BAAMP,MAAO,CAAEO,MAAO,YAAtB,MAAzC,SADnB,KAGA,yBAAKP,MAAO,CAAEiC,QAAS,OAAQoD,UAAW,SACtC,yBAAKO,IAAK,8BAA+B5F,MAAO,CAAE6F,OAAQ,QAASC,YAAa,QAASC,YAAa,WAAYC,IAAI,eACtH,uBAAIlG,UAAU,mBAAmBE,MAAO,CAAEQ,WAAY,SAAtD,wHAC+H,6BAD/H,wHAEyH,6BAFzH,sHAG6H,6BAH7H,yCAIgD,6BAJhD,oFAK+F,6BAL/F,uFAMkG,6BANlG,2EAOsF,oC,GAjBpFU,IAAMC,WCuDb8E,E,kDAnDb,aAAe,IAAD,8BACZ,gBAOFpF,gBAAkB,SAACS,GACjBA,EAAEC,iBACF,EAAKC,SAAS,CAAET,aAAc,cAC9BgD,eAAeC,QAAQ,eAAgB,cAX3B,EAcdhD,cAAgB,SAACM,GACfA,EAAEC,iBACF,EAAKC,SAAS,CAAET,aAAc,UAC9BgD,eAAeC,QAAQ,eAAgB,UAjB3B,EAoBdkC,mBAAqB,WACnB,OAAQ,EAAKxE,MAAMX,cACjB,IAAK,YACH,OAAO,kBAAC,EAAD,MACT,IAAK,QACH,OAAO,yBAAKf,MAAO,CAAEqF,UAAW,UAC9B,kBAAC,EAAD,OAEJ,QACE,OAAO,OA1BX,EAAK3D,MAAQ,CACXX,aAAe,aAJL,E,qDAkCZ,OACE,6BACE,kBAAC,EAAD,CACEF,gBAAiBF,KAAKE,gBACtBG,cAAeL,KAAKK,cACpBD,aAAcJ,KAAKe,MAAMX,eAE3B,yBAAKjB,UAAU,aACb,yBAAKE,MAAO,CAAEqF,UAAW,WACtB1E,KAAKuF,4B,GA5CMhF,IAAMC,WCAxBgF,E,uKAGF,OACE,yBAAKrG,UAAU,OACb,kBAAC,EAAD,W,GALUoB,IAAMC,WAWTiF,cAASD,GCJJE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dfafb4c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass NavigationBar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <AppBar className='navbar' position=\"fixed\" style={{ background: '#063A4C' }}>\r\n                <Toolbar variant=\"dense\" style={{ maxHeight: '2rem' }}>\r\n                <Container disableGutters>\r\n                    <p style={{ color: '#9BE8FF', marginLeft: '6em' }} >\r\n                        Game Of Life\r\n                    </p>\r\n                    </Container>\r\n                    <Container disableGutters>\r\n                        <div style={{ float: 'right' }}>\r\n                            <button className='btnNav' onClick={this.props.renderDashboard} style={{ backgroundColor: this.props.selectedPage === 'dashboard' ? '#009ECE' : null }}>\r\n                                Dashboard\r\n                            <span className=\"btnNav__glitch\"></span>\r\n                            </button>\r\n                            <button className='btnNav' onClick={this.props.renderWelcome} style={{ backgroundColor: this.props.selectedPage === 'about' ? '#009ECE' : null,  marginRight: '6em' }} >\r\n                                About\r\n                            <span className=\"btnNav__glitch\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </Container>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport SpaIcon from '@material-ui/icons/Spa';\r\nimport SpeedIcon from '@material-ui/icons/Speed';\r\n\r\nclass GameMenu extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tspeed: false\r\n\t\t}\r\n\t}\r\n\r\n\tchangeSpeed = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ speed: !this.state.speed });\r\n\t}\r\n\r\n\trenderPlayPause = () => {\r\n\t\tswitch (this.props.playState) {\r\n\t\t\tcase 'play':\r\n\t\t\t\treturn <button className='btnIcon' data-testid='play' onClick={this.props.playButton} >\r\n\t\t\t\t\t<PlayArrowIcon />\r\n\t\t\t\t</button>;\r\n\t\t\tcase 'resume':\r\n\t\t\t\treturn <button className='btnIcon' data-testid='resume' onClick={this.props.resumeButton} >\r\n\t\t\t\t\t<PlayArrowIcon />\r\n\t\t\t\t</button>\r\n\t\t\tcase 'pause':\r\n\t\t\t\treturn <button className='btnIcon' data-testid='pause' onClick={this.props.pauseButton}>\r\n\t\t\t\t\t<PauseIcon />\r\n\t\t\t\t</button>\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ display: 'flex', verticalAlign: 'middle', paddingBottom: '10px' }}>\r\n\t\t\t\t{this.renderPlayPause()}\r\n\t\t\t\t<button className='btnIcon' data-testid='speed' onClick={this.changeSpeed}>\r\n\t\t\t\t\t<SpeedIcon />\r\n\t\t\t\t</button>\r\n\t\t\t\t{this.state.speed ? (\r\n\t\t\t\t\t<button className='btnIcon' data-testid='slow' onClick={this.props.slow} style={{ backgroundColor: '#063a4c41' }} >\r\n\t\t\t\t\t\t<AcUnitIcon />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : null\r\n\t\t\t\t}\r\n\t\t\t\t{this.state.speed ? (\r\n\t\t\t\t\t<button className='btnIcon' data-testid='fast' onClick={this.props.fast} style={{ backgroundColor: '#063a4c41' }} >\r\n\t\t\t\t\t\t<WhatshotIcon />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : null\r\n\t\t\t\t}\r\n\t\t\t\t<button className='btnIcon' data-testid='back' onClick={this.props.stop}>\r\n\t\t\t\t\t<RestoreIcon />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='btnIcon' data-testid='reset' onClick={this.props.clear}>\r\n\t\t\t\t\t<ClearIcon />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='btnIcon' data-testid='seed' onClick={this.props.seed}>\r\n\t\t\t\t\t<SpaIcon />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default GameMenu;","import React from 'react';\r\nimport GameMenu from './GameMenu';\r\n\r\nclass Game extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.speed = 1200;\r\n\t\tthis.cols = 80;\r\n\t\tthis.rows = 40;\r\n\t\tthis.state = {\r\n\t\t\tgridFull: sessionStorage.getItem('initialState') !== null ? JSON.parse(sessionStorage.getItem('initialState')) : Array(this.rows).fill().map(() => Array(this.cols).fill(false)),\r\n\t\t\tclick: false,\r\n\t\t\tplayState: 'play'\r\n\t\t}\r\n\t}\r\n\r\n\tarrayClone(arr) {\r\n\t\treturn JSON.parse(JSON.stringify(arr));\r\n\t}\r\n\r\n\tonMouseClicked = (event) => {\r\n\t\tif (event.type === \"mousedown\") {\r\n\t\t\tthis.setState({ click: true });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState({ click: false });\r\n\t\t}\r\n\t}\r\n\r\n\tseed = () => {\r\n\t\tlet gridCopy = JSON.parse(JSON.stringify((this.state.gridFull)));\r\n\t\tfor (let i = 0; i < this.rows; i++) {\r\n\t\t\tfor (let j = 0; j < this.cols; j++) {\r\n\t\t\t\tif (Math.floor(Math.random() * 4) === 1) {\r\n\t\t\t\t\tgridCopy[i][j] = !gridCopy[i][j];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({ gridFull: gridCopy });\r\n\t\tthis.setState({ saveText: '' });\r\n\t}\r\n\r\n\tplayButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.intervalId = setInterval(this.play, this.speed);\r\n\r\n\t\tthis.setState({ playState: \"pause\" });\r\n\t\tsessionStorage.setItem('initialState', JSON.stringify(this.state.gridFull));\r\n\t}\r\n\r\n\tresumeButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.intervalId = setInterval(this.play, this.speed);\r\n\t\tthis.setState({ playState: \"pause\" });\r\n\t}\r\n\r\n\tpauseButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.setState({ playState: \"resume\" });\r\n\t}\r\n\r\n\tstopButton = () => {\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.setState({ gridFull: sessionStorage.getItem('initialState') !== null ? JSON.parse(sessionStorage.getItem('initialState')) : Array(this.rows).fill().map(() => Array(this.cols).fill(false)) });\r\n\t\tthis.setState({ playState: \"play\" });\r\n\t}\r\n\r\n\tslow = () => { this.speed = 1200; this.resumeButton(); }\r\n\r\n\tfast = () => { this.speed = 700; this.resumeButton(); }\r\n\r\n\tclear = () => {\r\n\t\tvar grid = Array(this.rows).fill().map(() => Array(this.cols).fill(false));\r\n\t\tthis.setState({ gridFull: grid });\r\n\t\tclearInterval(this.intervalId);\r\n\t\tthis.setState({ playState: \"play\" });\r\n\t}\r\n\r\n\tplay = () => {\r\n\t\tthis.calculateNextGen();\r\n\t}\r\n\r\n\tcalculateNextGen() {\r\n\t\tlet nextGeneration = this.arrayClone(this.state.gridFull);\r\n\t\tfor (let i = 0; i < this.rows; i++) {\r\n\t\t\tfor (let j = 0; j < this.cols; j++) {\r\n\t\t\t\tlet neighbors = this.calculateNeighbors(i, j);\r\n\t\t\t\tnextGeneration[i][j] = neighbors === 3 || nextGeneration[i][j];\r\n\t\t\t\tnextGeneration[i][j] = neighbors >= 2 && neighbors <= 3 && nextGeneration[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({ gridFull: nextGeneration });\r\n\t}\r\n\r\n\tcalculateNeighbors(i, k) {\r\n\t\tlet neighbors = 0;\r\n\t\tlet grid = this.state.gridFull;\r\n\r\n\t\tif (i > 0) {\r\n\t\t\tneighbors += grid[i - 1][k];\r\n\t\t\tneighbors += k > 0 ? grid[i - 1][k - 1] : 0;\r\n\t\t\tneighbors += k < this.cols - 1 ? grid[i - 1][k + 1] : 0;\r\n\t\t}\r\n\r\n\t\tif (i < this.rows - 1) {\r\n\t\t\tneighbors += grid[i + 1][k];\r\n\t\t\tneighbors += k > 0 ? grid[i + 1][k - 1] : 0;\r\n\t\t\tneighbors += k < this.cols - 1 ? grid[i + 1][k + 1] : 0;\r\n\t\t}\r\n\r\n\t\tneighbors += k > 0 ? grid[i][k - 1] : 0;\r\n\t\tneighbors += k < this.cols - 1 ? grid[i][k + 1] : 0;\r\n\r\n\t\treturn neighbors;\r\n\t}\r\n\r\n\tcolorBasedOnNeighbors(i, k) {\r\n\t\tlet neighbors = this.calculateNeighbors(i, k);\r\n\r\n\t\tif (neighbors < 2) {\r\n\t\t\treturn '#009ECE';\r\n\t\t}\r\n\t\tif (neighbors < 4) {\r\n\t\t\treturn '#17C5FA';\r\n\t\t}\r\n\t\treturn '#9BE8FF';\r\n\r\n\t}\r\n\r\n\tmapGrid() {\r\n\t\treturn (\r\n\t\t\t<div style={{ display: \"grid\", gridTemplateColumns: `repeat(${this.cols}, 16px)` }}>\r\n\t\t\t\t{this.state.gridFull.map((rows, i) =>\r\n\t\t\t\t\trows.map((col, k) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='cell'\r\n\t\t\t\t\t\t\tdata-testid={`${i}-${k}`}\r\n\t\t\t\t\t\t\tkey={`${i}-${k}`}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tlet g = this.state.gridFull;\r\n\t\t\t\t\t\t\t\tg[i][k] = !g[i][k];\r\n\t\t\t\t\t\t\t\tthis.setState({ gridFull: g })\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\tif (this.state.click === true) {\r\n\t\t\t\t\t\t\t\t\tlet g = this.state.gridFull;\r\n\t\t\t\t\t\t\t\t\tg[i][k] = !g[i][k];\r\n\t\t\t\t\t\t\t\t\tthis.setState({ gridFull: g })\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundColor: this.state.gridFull[i][k] ? this.colorBasedOnNeighbors(i, k) : undefined\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ marginTop: '30px' }}>\r\n\t\t\t\t<div onMouseDown={this.onMouseClicked} onMouseUp={this.onMouseClicked}>\r\n\t\t\t\t\t<GameMenu\r\n\t\t\t\t\t\tplayState={this.state.playState}\r\n\t\t\t\t\t\tplayButton={this.playButton}\r\n\t\t\t\t\t\tresumeButton={this.resumeButton}\r\n\t\t\t\t\t\tpauseButton={this.pauseButton}\r\n\t\t\t\t\t\tstop={this.stopButton}\r\n\t\t\t\t\t\tslow={this.slow}\r\n\t\t\t\t\t\tfast={this.fast}\r\n\t\t\t\t\t\tclear={this.clear}\r\n\t\t\t\t\t\tseed={this.seed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.mapGrid()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\n\r\nclass Welcome extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className='textAnimationBig' style={{ fontSize: '3rem', textAlign: 'center' }}>\r\n                    Welcome to the <span style={{ color: '#17c5fa' }}> Game <span style={{ color: '#9be8ff' }}>of</span> Life</span>.\r\n                </p>\r\n                <div style={{ display: 'flex', marginTop: '40px'}}>\r\n                    <img src={'game-of-life/gameoflife.gif'} style={{ border: 'solid', borderWidth: 'thick', borderColor: '#17c5fa'}} alt=\"GameOfLife\" />\r\n                    <p  className='textAnimationBig' style={{ marginLeft: '20px'}}>\r\n                        &nbsp;&nbsp;&nbsp;The Game of Life is a cellular automaton devised by the British mathematician John Horton Conway in 1970.<br />\r\n                        It is a zero-player game, meaning that its evolution is determined by its initial state, requiring no further input. <br />\r\n                        &nbsp;&nbsp;&nbsp;One interacts with the Game of Life by creating an initial configuration and observing how it evolves. <br />\r\n                        &nbsp;&nbsp;&nbsp;The game has three rules: <br />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1. Any live cell with two or three live neighbours survives. <br />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2. Any dead cell with three live neighbours becomes a live cell.<br />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3. All other live cells die in the next generation. <br />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\r\nimport NavigationBar from '../NavigationBar';\r\nimport Game from '../GameOfLifeGrid/Game';\r\nimport Welcome from '../About/Welcome';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      selectedPage:  'dashboard',\r\n    }\r\n  }\r\n\r\n  renderDashboard = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ selectedPage: 'dashboard' });\r\n    sessionStorage.setItem('selectedPage', 'dashboard');\r\n  }\r\n\r\n  renderWelcome = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ selectedPage: 'about' });\r\n    sessionStorage.setItem('selectedPage', 'about');\r\n  }\r\n\r\n  renderSelectedPage = () => {\r\n    switch (this.state.selectedPage) {\r\n      case 'dashboard':\r\n        return <Game />;\r\n      case 'about':\r\n        return <div style={{ marginTop: '100px' }}>\r\n          <Welcome />\r\n        </div>;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavigationBar\r\n          renderDashboard={this.renderDashboard}\r\n          renderWelcome={this.renderWelcome}\r\n          selectedPage={this.state.selectedPage}\r\n        />\r\n        <div className=\"container\">\r\n          <div style={{ marginTop: '2.5rem' }}>\r\n            {this.renderSelectedPage()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport { observer } from 'mobx-react'\r\nimport './App.css'\r\nimport Dashboard from './components/pages/Dashboard';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Dashboard />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}